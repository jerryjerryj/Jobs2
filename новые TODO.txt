+ добавить безоп. вакансии (комп. безопасность, не информационная)
+ сбалансировать выборку  

+ TF-IDF
- Fasttext (сделать через gensim)

+ Crossvalidation
+ таблица итоговая по разным моделям (w2v, tfidf, tfidf+w2v, fasttext)

описать качество в multilable (рассказать)

---------------
то же по требованиям
+ подчитать кол-во требований по 12 вакансиям(сумму)





### 1042 вакансии стало
### Total number of words in W2V: 177712

записать это всё в shared документ (задачи и результаты)

вернуть вакансии
статья доделать (сравнение методов векторных представлений текстов в задачах классификации вакансий и требований рынка труда)

fasttext( gensim)(+можно дообновление весов для задачи с требованиями)
попробовать задачу с требованиями на Doc2Vec
попробовать для каждой професии свой word2vec (+ обученный на учебниках\курсах)
если ничто не сработает - в конце видео Льва посл. метод 

------

из требований выделить специфичные слова ( например "уметь писать код" = "уметь писать на C#")
(др. вариант - убрать из требований высокочастотные слова(~5%) и слова из ПС)

посмотреть случ. лес и бустинг.


from gensim.models import FastText 
sentences_1 = [["cat", "say", "meow"], ["dog", "say", "woof"]] 
sentences_2 = [["dude", "say", "wazzup!"]] 
model = FastText(min_count=1) 
model.build_vocab(sentences_1) 
model.train(sentences_1, total_examples=model.corpus_count, epochs=model.iter) 
model.build_vocab(sentences_2, update=True) 
model.train(sentences_2, total_examples=model.corpus_count, epochs=model.iter)


Общие:

вернуть вакансии
эксперименты с fasttext(gensim)
посмотреть случ. лес и бустинг.
дописать статью

По задаче соответствия требований профессиональным стандартам

попробовать для каждой професии свой word2vec (обученный на учебниках\курсах по данной профессии)
попробовать задачу с требованиями на Doc2Vec
уже обученный fasttext по задаче с вакансиямии - дообновить для задачи с требованиями (тексты из учебников\курсов)
если ничто не сработает - в конце видео Льва посл. метод 

На будущее:

из требований выделить специфичные слова ( например "уметь писать код" = "уметь писать на C#")
др. вариант - убрать из требований высокочастотные слова(~5%) и слова из ПС



ВАРИАНТЫ:
метод с видео
FastText без лемматизации
Сверточные сети на 3х буквенном разложении







ДЛЯ СТАТЬИ:
подсчитать кол-во векторов в ТФИДФ











